选择器
h1{color: red;}
.m-nav{height: 70px;font-size: 14px;}
表达式
expression----->Array<element>

简单选择器
伪元素选择器
组合选择器

标签选择器
<div>
	<p>段落一</p>
	<p>段落二</p>
	<p>段落二</p>
</div>
p{color:blue;}

类选择器
<div>
	<p>段落一</p>
	<p class="special">段落二</p>
	<p class="special stress">段落二</p>
</div>
p{color:blue;}
.special{color:red;}
.stress{font-weight:bold;}
class的值可以是多个的,不同class之间用空格隔开

.className:
	.开头
	字母，数字，-，_
	className必须以字母开头
	区分大小写
	相同名称的className可以出现多次

id选择器
<div id="banner">
	banner
</div>
<div>
	content
</div>

div{color: gray;}
#banner{color:black;}

#id:
	#开头
	字母，数字，-，_
	id必须以字母开头
	区分大小写
	只出现一次

通配符选择器
<div>
	<h2>标题</h2>
	<p>段落一</p>
</div>
<div>页脚</div>
将上面标签中的文字颜色都设置成蓝色
h2{color:blue;}
p{color:blue;}
div{color:blue;}
或
*{color:blue;}--------*会选择页面中的所有元素

属性选择器-[att]
<form action="">
	<div>
		<input disabled type="text" value="张三">
	</div>
	<div>
		<input type="password" plceholder="密码">
	</div>
</form>
[disabled]{backgroud-color:#eee;}

属性选择器-[att=val]
<form action="">
	<input type="text" value="文本框">
	<input type="button" value="按钮">
</form>
[type=button]{color:blue;}
#nav{}==[id=nav]{}------id选择器是特殊的属性选择器

属性选择器-[att~=val]
<h2 class="title sports">标题</h2>
<p class="sports">内容...</p>
[class~=sports]{color:blue;}----------------表示属性里边包含一个值
.sports{}==[class~=sports]{}-----------------class选择器是特殊的属性选择器


属性选择器-[att|=val]----------选中前缀，用的不多
<p lang="en">Hello!</p>
<p lang="en-us">Greetings!</p>
<p lang="en-au">G'day!</p>
<p lang="enfr">Bonjour!</p>
<p lang="cy-en">Jrooana!</p>
[lang|=en]{color:red;}

属性选择器-[att^=val]--------属性开头包含
<div>
	<a href="http://www.w3.org/">W3C</a>
	<a href="#html">HTML</a>------------------------------#链接到页面中的某个地方
	<a href="#css">CSS</a>
</div>
[href^="#"]{color:red;}-----------------属性值中是符号或有空格，则需要用双引号

属性选择器-[att$=val]-------------属性结尾包含
<a href="http://xxx.doc">word文档.doc</a>
<a href="http://xxx.pdf">pdf文件.pdf</a>
[href$=pdf]{color:red;}

属性选择器-[att*=val]----属性值包含某些值
<a href="http://lady.163.com">女性。。。</a>
<a href="http://lady.163.com">范玮琪。。。</a>
<a href="http://sports.163.com">球星。。。</a>
<a href="http://sports.163.com">皇马。。。</a>
[href*="lady.163.com"]{color:pink;}

伪类选择器
<a href="http://wwww.163.com">网易首页</a>
a:link{color:gray;}
a:visited{color:red;}访问过了的链接
a:hover{color:green;}
a:active{color:orange;}
伪类选择器以冒号开头
和a标签不同，a标签会选择所有的a标签，伪类选择器只选择href中有值的
link和visited只用在链接中
hover和active可以用在其他地方
顺序：link visited hover active

其他伪类选择器
:enabled
	input:enabled{color:#ccc;}
:disabled
	input:disabled{color:#ddd;}
checked
	input:checked{color:red;}

表格是基偶相间的
<ul>
	<li>1</li>
	<li>2</li>
	<li>3</li>
	<li>4</li>
	<li>5</li>
	<li>6</li>
</ul>
li:first-child{color:red;}
li:last-child{color:red;}
li:nth-child(even){color:red;}
li:nth-child(3n+1){color:red;}-------------n从0开始
li:nth-last-child(3n+1){color:red;}--------倒数

<ul>
	<li>1</li>
</ul>
<ul>
	<li>1</li>
	<li>2</li>
</ul>
:only-child{color:red;}---------------只会选中拥有一个子元素的项

<dl>
	<dt>作者：</dt>
	<dd>AAAA</dd>
	<dd>BBBBB</dd>
	<dt>出版社：</dt>
	<dd>人民邮电出版社</dd>
</dl>
dd:first-of-type{color:red;}----------------第一个属性类型为dd的元素
dt:last-of-type{color:red;}
dd:nth-of-type(even){color:red;}
dd:nth-last-of-type(2n){color:red;}

<p> <span>CSS</span>和<span>HTML</span>是页面制作的基础。</p>
<p> <span>CSS</span>主要是用于定义<em>HTML</em>内容在浏览器内的显示样式。</p>
span:only-of-type{color:red;}

不常用的伪类
:empty----------选中没有子元素的标签
<p></p>
<p>段落一</p>

:root-----------选中html根标签
<html>
	<head>
	...
	</head>
	<body>
	...
	</body>
</html>

:not()--------不包含某个选择器的元素
:target-------选择一些锚点
:lang---------选择某些lang值是特殊值的一些元素


简单选择器
tag{}---------标签选择器
.className{}-----类选择器
#id{}------------id选择器
*{}-------------通配符选择器
[att]{}---------属性选择器
:link{}---------伪类选择器

简单选择器可以组合
如
img[src$=jpg]{}
#banner:hover{}

伪元素选择器
<p>
	CSS伪元素选择器是....
</p>
::first-letter{color:red;}-------------第一个字母的颜色是红色的

伪元素选择器以两个冒号开头::,以便和伪类选择器区分

选中第一行
<p>
伪元素选择器可以为第一行
文字设置特殊样式
</p>
::first-line{color:red;}

在一些内容的前面或后面加一些内容
<p>
	在某个元素之前插入一些内容；
	在某个元素之后插入一些内容；
</p>
::before{content:"before";}
::after{content:"after";}

应用于被用户选中的内容
<p>
	::selection伪元素选择器应用于被用户选中的内容。
</p>
::selection{
	color:red;
	background-color:#ccc;
}


组合选择器
	后代选择器
	子选择器
	兄弟选择器

后代选择器和子选择器
<div class="main">
	<h2>标题一</h2>
	<div>
		<h2>标题二</h2>
		<p>段落一</p>
	</div>
</div>
.main h2{color:red;}------------main里边为h2的选择器
.main>h2{color:red;}------------main里边的子元素为h2的选择器

相邻兄弟选择器
<div class="main">
	<h2>标题一</h2>
	<div>
		<h2>标题二</h2>
		<p>段落一</p>
	</div>
</div>
h2+p{color:red;}-----------------选中h2后边相邻的p

通用兄弟选择器
<div class="main">
	<h2>标题一</h2>
	<div>
		<h2>标题二</h2>
		<p>段落一</p>
		<p>段落段落二</p>
		<p>段落段落三</p>
	</div>
</div>
h2~p{color:red;}-----------------选中h2后边所有的兄弟节点为P的标签

选择器分组
h1{color:gray;font-family:sans-serif;}
h2{color:gray;font-family:sans-serif;}
h3{color:gray;font-family:sans-serif;}
相当于
h1,h2,h3{color:gray;font-family:sans-serif;}

页面中所有文字的字体是微软雅黑
<body>
	<div>页面头部</div>
	<div>
		<h2>标题</h2>
		<p>内容</p>
		...
	</div>
	<div>页面尾部</div>
</body>
采用CSS继承属性，对顶部标签body设置样式
body{font-family:"Microsoft Yahei";}-------------会应用到所有子元素中，但不是所有属性都能继承
可继承的属性如下
	color
	font
	text-align
	list-style
	...

<div>
	<h2>标题一</h2>
	<p>段落一</p>
</div>
div{color:red;}div中的所有字体的颜色都设置成红色

非继承属性
	background
	border
	position
	float
<div>
	<h2>标题一</h2>
	<p>段落一</p>
</div>
div{border:1px solid #ccc;}

inheried表示属性是否可以继承，yes可已自动继承，no不可以继承

同一个元素设置两个样式，一个是对标签设置一个是对标签的类进行设置，那么哪个属性会被真正的应用
p{color:red;}
.tip{color:gray}

CSS优先级
a=行内样式
b=ID选择器的数量
c=类、伪类和属性选择器的数量
d=标签选择器和伪元素选择器的数量
value=a*1000+b*100+c*10+d

选择器			a	b	c	d	value
----------------------------------------------------------------
h1			0	0	0	1	1
p>em			0	0	0	2	2
style:""		1000	0	0	0	1000
.comment p		0	0	10	1	11
div#content		0	100	0	1	101
a:link			0	0	10	1	11
----------------------------------------------------------------
优先级高的选择器优于优先级低的选择器
如：
<a href="#">这是一个站内链接</a>
a:link{color:blue;}
a[href^="#"]a:link{color:red;}

当优先级一样的时候需要用到CSS层叠
相同的属性会覆盖
	优先级高的覆盖优先级低的
	优先级一样的，会覆盖之前的样式
不同的属性会合并

如
<div>
	<p class="special">CSS层叠...</p>
</div>

p{
	color:blue;
	text-align:left;
	font-weight:bold;
}
p.special{
	color:red;
	text-align:right;
}
p:first-child{
	color:green;
}
最后的效果显示为
color:green;
text-align:right;
font-weight:bold;

当选择器的优先级一样时，可以改变选择器的前后顺序来显示选择器中的样式
如：
<p class="tip special">改变位置</p>
.tip{
	color:blue;
}

.special{
	color:red;
}

提升选择器的优先级
.tip{
	color:blue;
}

p.special{
	color:red;
}

!important优于其他的样式
.tip{
	color:blue !important;
}

p.special{
	color:red;
}
!important最后才会采用的方式